I"®<p>Show of hands here, who hates Albert? No, not your buddy Albert, who
Iâ€™m sure is a great person. Iâ€™m talking about <a href="http://albert.nyu.edu/albert_index.html">NYUâ€™s
Albert</a>, the <em>wonderful</em>
course registration site that totally doesnâ€™t make you want to murder
someone.</p>

<p>I, for one, detest it. I could go on and on about how much I hate
every little detail, but letâ€™s stay focused here. Fortunately, my
friend, <a href="https://github.com/a1liu/">Albert Liu</a> (yes yes, the irony is
palpable) at <a href="https://bugs-nyu.github.io/">BUGS</a>, has built a solution
in the form of Schedge.</p>

<p>What is Schedge? Schedge is a program that scrapes Albert, then
provides a simple API for course data. You can query course data from
different semesters with all the corresponding meeting times and
recitations.</p>

<p>Of course with this data, we can easily build a better user interface
for exploring courses. Iâ€™ve already written a quick <a href="https://courses.torchnyu.com/">proof of
concept</a>. Itâ€™s not much to look at, but
itâ€™s a start.</p>

<p>However thatâ€™s just the beginning. You see, Schedge is more than just
a way to build course explorer: <em>Schedge is whatever you want it to
be</em>. Want to build an app that visualizes course times? Go ahead! Want
to see how course options have changed over the years? Why not? Want
to make a random schedule generator? Do it!</p>

<p>Iâ€™m really curious to see how people use Schedge. Torchâ€™s mission is
to promote and incubate NYUâ€™s CS community. Hopefully, by offering an
API to a problem so near and dear to NYU studentsâ€™ hearts, we can get
people writing code to solve their everyday issues. If people can
build projects with passion and dedication, then theyâ€™ll learn far
more building than from any course or any lecture. And nothing
inspires passion more then waiting for Albert to goddamn load.</p>

<p>Schedge is still very very new and therefore will go through some
growing pains. Weâ€™re adding features as quickly as we can, but thereâ€™s
only a few developers currently. Which is another place where you can
help! We specifically chose a stack for Schedge that makes it easy for
NYU students to contribute. Namely, we wrote Schedge in Java <sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup> with
a very simple framework called <a href="https://javalin.io/">Javalin</a>. If
youâ€™ve taken Intro to CS at NYU, you can contribute! If you havenâ€™t,
you can also contribute! We will happily teach you Java and everything
else you need to know.</p>

<p>If youâ€™re interested, reach out to either
<a href="https://github.com/a1liu/">Albert Liu</a> or
<a href="https://github.com/nicholaslyang">me</a>. Or just clone the
<a href="https://github.com/a1liu/schedge">repo</a> and start playing around.</p>

<p>Schedge is currently up <a href="https://schedge.torchnyu.com/">here</a>. Thereâ€™s
a minor issue where http links arenâ€™t redirected to https, so donâ€™t go
to http://schedge.torchnyu.com/ and come running to me that the APIâ€™s
down. We use HTTPS for everythingâ€¦whether we like it or not. We have
basic API docs set up, but feel free to ping us if something doesnâ€™t
make sense.</p>

<p>Now go out there and build something with Schedge!</p>
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Well actually Java and Kotlin but weâ€™re slowly moving it to just Java.Â <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET